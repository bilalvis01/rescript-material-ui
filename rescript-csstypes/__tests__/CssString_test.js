// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Css$Css = require("../src/Css.js");
var CssString$Css = require("../src/CssString.js");

test("number", (function () {
        expect(CssString$Css.num(1)).toBe("1");
        expect(CssString$Css.number(Css$Css.num(1))).toBe("1");
        
      }));

test("integer", (function () {
        expect(CssString$Css.$$int(1)).toBe("1");
        expect(CssString$Css.integer(Css$Css.$$int(1))).toBe("1");
        
      }));

test("percentage", (function () {
        expect(CssString$Css.pct(1)).toBe("1%");
        expect(CssString$Css.percentage(Css$Css.pct(1))).toBe("1%");
        
      }));

test("length", (function () {
        expect(CssString$Css.ch(1)).toBe("1ch");
        expect(CssString$Css.em(1)).toBe("1em");
        expect(CssString$Css.ex(1)).toBe("1ex");
        expect(CssString$Css.rem(1)).toBe("1rem");
        expect(CssString$Css.vh(1)).toBe("1vh");
        expect(CssString$Css.vw(1)).toBe("1vw");
        expect(CssString$Css.vmin(1)).toBe("1vmin");
        expect(CssString$Css.vmax(1)).toBe("1vmax");
        expect(CssString$Css.px(1)).toBe("1px");
        expect(CssString$Css.cm(1)).toBe("1cm");
        expect(CssString$Css.mm(1)).toBe("1mm");
        expect(CssString$Css.inch(1)).toBe("1in");
        expect(CssString$Css.pc(1)).toBe("1pc");
        expect(CssString$Css.pt(1)).toBe("1pt");
        expect(CssString$Css.length(Css$Css.mm(1))).toBe("1mm");
        expect(CssString$Css.length(Css$Css.cm(1))).toBe("1cm");
        
      }));

test("angle", (function () {
        expect(CssString$Css.deg(1)).toBe("1deg");
        expect(CssString$Css.grad(1)).toBe("1grad");
        expect(CssString$Css.rad(1)).toBe("1rad");
        expect(CssString$Css.turn(1)).toBe("1turn");
        expect(CssString$Css.angle(Css$Css.deg(1))).toBe("1deg");
        expect(CssString$Css.angle(Css$Css.grad(1))).toBe("1grad");
        
      }));

test("color", (function () {
        expect(CssString$Css.hue(Css$Css.deg(1))).toBe("1deg");
        expect(CssString$Css.hue(Css$Css.num(1))).toBe("1");
        expect(CssString$Css.alpha(Css$Css.pct(1))).toBe("1%");
        expect(CssString$Css.alpha(Css$Css.num(1))).toBe("1");
        expect(CssString$Css.rgbParam(Css$Css.pct(1))).toBe("1%");
        expect(CssString$Css.rgbParam(Css$Css.num(1))).toBe("1");
        expect(CssString$Css.hsl(Css$Css.num(1), Css$Css.pct(10), Css$Css.pct(10))).toBe("hsl(1, 10%, 10%)");
        expect(CssString$Css.hsla(Css$Css.num(1), Css$Css.pct(10), Css$Css.pct(10), Css$Css.num(1))).toBe("hsla(1, 10%, 10%, 1)");
        expect(CssString$Css.rgb(Css$Css.num(1), Css$Css.num(1), Css$Css.pct(10))).toBe("rgb(1, 1, 10%)");
        expect(CssString$Css.rgba(Css$Css.num(1), Css$Css.num(1), Css$Css.pct(10), Css$Css.num(10))).toBe("rgba(1, 1, 10%, 10)");
        expect(CssString$Css.rgbHex("000000")).toBe("#000000");
        expect(CssString$Css.color(Css$Css.rgbHex("000000"))).toBe("#000000");
        expect(CssString$Css.color(Css$Css.rgb(Css$Css.num(1), Css$Css.num(1.8), Css$Css.pct(10)))).toBe("rgb(1, 1.8, 10%)");
        
      }));

test("lineWidth", (function () {
        expect(CssString$Css.lineWidth("thick")).toBe("thick");
        expect(CssString$Css.lineWidth(Css$Css.mm(10))).toBe("10mm");
        
      }));

test("borderColor", (function () {
        expect(CssString$Css.borderColor("revert")).toBe("revert");
        expect(CssString$Css.borderColor(Css$Css.hsl(Css$Css.num(1), Css$Css.pct(10), Css$Css.pct(10)))).toBe("hsl(1, 10%, 10%)");
        
      }));

/*  Not a pure module */
