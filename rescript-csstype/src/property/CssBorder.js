// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var CssDeclaration$Ress = require("../declaration/CssDeclaration.js");
var CssValueString$Ress = require("../value/CssValueString.js");
var CssDeclarationFn$Ress = require("../declaration/CssDeclarationFn.js");

var property = "border";

function MakeValue(Type) {
  var value = function (width, color, style) {
    var border = width !== undefined ? (
        color !== undefined ? CssValueString$Ress.lineWidth(width) + " " + CssValueString$Ress.color(color) : CssValueString$Ress.lineWidth(width)
      ) : (
        color !== undefined ? CssValueString$Ress.color(color) : undefined
      );
    if (style === "inherit" || style === "unset" || style === "revert" || style === "initial") {
      return CssValueString$Ress.$$global(style);
    } else if (border !== undefined) {
      return border + " " + CssValueString$Ress.lineStyle(style);
    } else {
      return CssValueString$Ress.lineStyle(style);
    }
  };
  return {
          value: value
        };
}

function value(width, color, style) {
  var border = width !== undefined ? (
      color !== undefined ? CssValueString$Ress.lineWidth(width) + " " + CssValueString$Ress.color(color) : CssValueString$Ress.lineWidth(width)
    ) : (
      color !== undefined ? CssValueString$Ress.color(color) : undefined
    );
  if (style === "inherit" || style === "unset" || style === "revert" || style === "initial") {
    return CssValueString$Ress.$$global(style);
  } else if (border !== undefined) {
    return border + " " + CssValueString$Ress.lineStyle(style);
  } else {
    return CssValueString$Ress.lineStyle(style);
  }
}

function border(width, color, style) {
  return CssDeclaration$Ress.Helper.declaration(property, value(width, color, style));
}

function borderUnion(v) {
  return CssDeclaration$Ress.Helper.declaration(property, v);
}

function borderString(v) {
  return CssDeclaration$Ress.Helper.declaration(property, v);
}

var DeclarationHelper = {
  border: border,
  borderUnion: borderUnion,
  borderString: borderString
};

function borderFn(v) {
  return CssDeclarationFn$Ress.Helper.declarationFn(property, v);
}

var DeclarationFnHelper = {
  border: border,
  borderUnion: borderUnion,
  borderString: borderString,
  borderFn: borderFn
};

exports.MakeValue = MakeValue;
exports.value = value;
exports.DeclarationHelper = DeclarationHelper;
exports.DeclarationFnHelper = DeclarationFnHelper;
/* No side effect */
