// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function make(declaration) {
  var variant = declaration.NAME;
  if (variant === "BorderTopColor") {
    return [
            "borderTopColor",
            declaration.VAL
          ];
  }
  if (variant === "BorderTopWidth") {
    return [
            "borderTopWidth",
            declaration.VAL
          ];
  }
  if (variant === "BorderRight") {
    return [
            "borderRight",
            declaration.VAL
          ];
  }
  if (variant === "BackgroundAttachment") {
    return [
            "backgroundAttachment",
            declaration.VAL
          ];
  }
  if (variant === "Clear") {
    return [
            "clear",
            declaration.VAL
          ];
  }
  if (variant === "Color") {
    return [
            "color",
            declaration.VAL
          ];
  }
  if (variant === "BackgroundImage") {
    return [
            "backgroundImage",
            declaration.VAL
          ];
  }
  if (variant === "PaddingRight") {
    return [
            "paddingRight",
            declaration.VAL
          ];
  }
  if (variant === "BorderBottomColor") {
    return [
            "borderBottomColor",
            declaration.VAL
          ];
  }
  if (variant === "BorderBottomWidth") {
    return [
            "borderBottomWidth",
            declaration.VAL
          ];
  }
  if (variant === "PaddingLeft") {
    return [
            "paddingLeft",
            declaration.VAL
          ];
  }
  if (variant === "BackgroundColor") {
    return [
            "backgroundColor",
            declaration.VAL
          ];
  }
  if (variant === "Margin") {
    return [
            "margin",
            declaration.VAL
          ];
  }
  if (variant === "Cursor") {
    return [
            "cursor",
            declaration.VAL
          ];
  }
  if (variant === "BorderStyle") {
    return [
            "border",
            declaration.VAL
          ];
  }
  if (variant === "BorderLeft") {
    return [
            "borderLeft",
            declaration.VAL
          ];
  }
  if (variant === "BorderRightColor") {
    return [
            "borderRightColor",
            declaration.VAL
          ];
  }
  if (variant === "BorderRightWidth") {
    return [
            "borderRightWidth",
            declaration.VAL
          ];
  }
  if (variant === "MarginLeft") {
    return [
            "marginLeft",
            declaration.VAL
          ];
  }
  if (variant === "BorderTopStyle") {
    return [
            "borderTopStyle",
            declaration.VAL
          ];
  }
  if (variant !== "Property") {
    if (variant === "MarginBottom") {
      return [
              "marginBottom",
              declaration.VAL
            ];
    } else if (variant === "BorderLeftColor") {
      return [
              "borderLeftColor",
              declaration.VAL
            ];
    } else if (variant === "BorderLeftWidth") {
      return [
              "borderLeftWidth",
              declaration.VAL
            ];
    } else if (variant === "BorderBottom") {
      return [
              "borderBottom",
              declaration.VAL
            ];
    } else if (variant === "MarginTop") {
      return [
              "marginTop",
              declaration.VAL
            ];
    } else if (variant === "FontFamily") {
      return [
              "fontFamily",
              declaration.VAL
            ];
    } else if (variant === "PaddingBottom") {
      return [
              "paddingBottom",
              declaration.VAL
            ];
    } else if (variant === "MarginRight") {
      return [
              "marginRight",
              declaration.VAL
            ];
    } else if (variant === "Border") {
      return [
              "border",
              declaration.VAL
            ];
    } else if (variant === "Background") {
      return [
              "background",
              declaration.VAL
            ];
    } else if (variant === "Padding") {
      return [
              "padding",
              declaration.VAL
            ];
    } else if (variant === "BorderBottomStyle") {
      return [
              "borderBottomStyle",
              declaration.VAL
            ];
    } else if (variant === "BackgroundPosition") {
      return [
              "backgroundPosition",
              declaration.VAL
            ];
    } else if (variant === "BorderTop") {
      return [
              "borderTop",
              declaration.VAL
            ];
    } else if (variant === "BackgroundStyle") {
      return [
              "backgroundStyle",
              declaration.VAL
            ];
    } else if (variant === "FontWeight") {
      return [
              "fontWeight",
              declaration.VAL
            ];
    } else if (variant === "PaddingTop") {
      return [
              "paddingTop",
              declaration.VAL
            ];
    } else if (variant === "BorderRightStyle") {
      return [
              "borderRightStyle",
              declaration.VAL
            ];
    } else if (variant === "BorderColor") {
      return [
              "borderColor",
              declaration.VAL
            ];
    } else if (variant === "BorderWidth") {
      return [
              "boderWidth",
              declaration.VAL
            ];
    } else {
      return [
              "borderLeftStyle",
              declaration.VAL
            ];
    }
  }
  var match = declaration.VAL;
  return [
          match[0],
          match[1]
        ];
}

exports.make = make;
/* No side effect */
