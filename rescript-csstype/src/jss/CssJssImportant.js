// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var CssDeclaration$Ress = require("../declaration/CssDeclaration.js");
var CssDeclarationFn$Ress = require("../declaration/CssDeclarationFn.js");

function Make(Type) {
  var makeValueImportant = (function (value) {                
          if (Array.isArray(value)) {
            let val = value.map(item => {
              if (Array.isArray(item)) {
                return item;
              }

              return [item];
            });
            
            return [...val, '!important'];
          }

          return [[value], '!important'];
        });
  var make = function (v) {
    var match = CssDeclaration$Ress.make(v);
    return [
            match[0],
            makeValueImportant(match[1])
          ];
  };
  var Declaration = {
    makeValueImportant: makeValueImportant,
    make: make
  };
  var makeValueImportant$1 = (function (valueFn) {
          return function (data) {
            let value = valueFn(data)
        
            if (Array.isArray(value)) {
              let val = value
                .map(item => {
                  if (Array.isArray(item)) {
                    return item
                  }

                  return [item]
                });
              
              return [...val, '!important'];
            }

            return [[value], '!important'];
          }
        });
  var make$1 = function (v) {
    var match = CssDeclarationFn$Ress.make(v);
    return [
            match[0],
            makeValueImportant$1(match[1])
          ];
  };
  var DeclarationFn = {
    makeValueImportant: makeValueImportant$1,
    make: make$1
  };
  var make$2 = function (v) {
    var v$1 = v.VAL;
    if (v$1.NAME === "DeclarationFn") {
      return make$1(v$1);
    } else {
      return make(v$1);
    }
  };
  return {
          Declaration: Declaration,
          DeclarationFn: DeclarationFn,
          make: make$2
        };
}

function important(v) {
  return {
          NAME: "Important",
          VAL: v
        };
}

var Helper = {
  important: important
};

exports.Make = Make;
exports.Helper = Helper;
/* No side effect */
