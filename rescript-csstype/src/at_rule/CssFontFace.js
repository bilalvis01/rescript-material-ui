// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Js_dict = require("rescript/lib/js/js_dict.js");
var CssNestedAtRule$Ress = require("./CssNestedAtRule.js");

var nestedAtRule = CssNestedAtRule$Ress.Helper.nestedAtRule;

var make = Js_dict.fromArray;

var DescriptorBlock = {
  make: make
};

function fontFace(descriptors) {
  return Curry._3(nestedAtRule, "@font-face", undefined, Js_dict.fromArray(descriptors));
}

var AtRuleHelper = {
  fontFace: fontFace
};

var Type = {};

function fontDisplay(v) {
  if (v === "swap") {
    return "swap";
  } else if (v === "optional") {
    return "optional";
  } else if (v === "fallback") {
    return "fallback";
  } else if (v === "block") {
    return "block";
  } else {
    return "auto";
  }
}

var $$String = {
  fontDisplay: fontDisplay
};

function descriptor(property, value) {
  return [
          property,
          value
        ];
}

function fontDisplay$1(v) {
  return [
          "fontDisplay",
          fontDisplay(v)
        ];
}

function fontDisplayString(v) {
  return [
          "fontDisplay",
          v
        ];
}

exports.DescriptorBlock = DescriptorBlock;
exports.AtRuleHelper = AtRuleHelper;
exports.Type = Type;
exports.$$String = $$String;
exports.descriptor = descriptor;
exports.fontDisplay = fontDisplay$1;
exports.fontDisplayString = fontDisplayString;
/* No side effect */
