let propertyFn: (string, 'data => option<'a>) => [> CssDeclarationFnConstructor.property<'data> ];
let borderFn: ('data => option<CssBorder.t>) => [> CssDeclarationFnConstructor.border<'data> ];
let borderTopFn: ('data => option<CssBorder.t>) => [> CssDeclarationFnConstructor.borderTop<'data> ];
let borderLeftFn: ('data => option<CssBorder.t>) => [> CssDeclarationFnConstructor.borderLeft<'data> ];
let borderRightFn: ('data => option<CssBorder.t>) => [> CssDeclarationFnConstructor.borderRight<'data> ];
let borderBottomFn: ('data => option<CssBorder.t>) => [> CssDeclarationFnConstructor.borderBottom<'data> ];
let borderColorFn: ('data => option<CssBorderColor.t>) => [> CssDeclarationFnConstructor.borderColor<'data> ];
let borderTopColorFn: ('data => option<CssBorderTopColor.t>) => [> CssDeclarationFnConstructor.borderTopColor<'data> ];
let borderRightColorFn: ('data => option<CssBorderRightColor.t>) => [> CssDeclarationFnConstructor.borderRightColor<'data> ];
let borderBottomColorFn: ('data => option<CssBorderBottomColor.t>) => [> CssDeclarationFnConstructor.borderBottomColor<'data> ];
let borderLeftColorFn: ('data => option<CssBorderLeftColor.t>) => [> CssDeclarationFnConstructor.borderLeftColor<'data> ];
let borderStyleFn: ('data => option<CssBorderStyle.t>) => [> CssDeclarationFnConstructor.borderStyle<'data> ];
let borderTopStyleFn: ('data => option<CssBorderTopStyle.t>) => [> CssDeclarationFnConstructor.borderTopStyle<'data> ];
let borderRightStyleFn: ('data => option<CssBorderRightStyle.t>) => [> CssDeclarationFnConstructor.borderRightStyle<'data> ];
let borderBottomStyleFn: ('data => option<CssBorderBottomStyle.t>) => [> CssDeclarationFnConstructor.borderBottomStyle<'data> ];
let borderLeftStyleFn: ('data => option<CssBorderLeftStyle.t>) => [> CssDeclarationFnConstructor.borderLeftStyle<'data> ];
let borderWidthFn: ('data => option<CssBorderWidth.t>) => [> CssDeclarationFnConstructor.borderWidth<'data> ];
let borderTopWidthFn: ('data => option<CssBorderTopWidth.t>) => [> CssDeclarationFnConstructor.borderTopWidth<'data> ];
let borderRightWidthFn: ('data => option<CssBorderRightWidth.t>) => [> CssDeclarationFnConstructor.borderRightWidth<'data> ];
let borderBottomWidthFn: ('data => option<CssBorderBottomWidth.t>) => [> CssDeclarationFnConstructor.borderBottomWidth<'data> ];
let borderLeftWidthFn: ('data => option<CssBorderLeftWidth.t>) => [> CssDeclarationFnConstructor.borderLeftWidth<'data> ];
let backgroundFn: ('data => option<CssBackground.t>) => [> CssDeclarationFnConstructor.background<'data> ];
let backgroundAttachmentFn: ('data => option<CssBackgroundAttachment.t>) => [> CssDeclarationFnConstructor.backgroundAttachment<'data> ];
let backgroundColorFn: ('data => option<CssBackgroundColor.t>) => [> CssDeclarationFnConstructor.backgroundColor<'data> ];
let backgroundImageFn: ('data => option<CssBackgroundImage.t>) => [> CssDeclarationFnConstructor.backgroundImage<'data> ];
let backgroundPositionFn: ('data => option<CssBackgroundPosition.t>) => [> CssDeclarationFnConstructor.backgroundPosition<'data> ];
let backgroundStyleFn: ('data => option<CssBackgroundStyle.t>) => [> CssDeclarationFnConstructor.backgroundStyle<'data> ];
let marginFn: ('data => option<CssMargin.t>) => [> CssDeclarationFnConstructor.margin<'data> ];
let marginTopFn: ('data => option<CssMarginTop.t>) => [> CssDeclarationFnConstructor.marginTop<'data> ];
let marginRightFn: ('data => option<CssMarginRight.t>) => [> CssDeclarationFnConstructor.marginRight<'data> ];
let marginBottomFn: ('data => option<CssMarginBottom.t>) => [> CssDeclarationFnConstructor.marginBottom<'data> ];
let marginLeftFn: ('data => option<CssMarginLeft.t>) => [> CssDeclarationFnConstructor.marginLeft<'data> ];
let paddingFn: ('data => option<CssPadding.t>) => [> CssDeclarationFnConstructor.padding<'data> ];
let paddingTopFn: ('data => option<CssPaddingTop.t>) => [> CssDeclarationFnConstructor.paddingTop<'data> ];
let paddingRightFn: ('data => option<CssPaddingRight.t>) => [> CssDeclarationFnConstructor.paddingRight<'data> ];
let paddingBottomFn: ('data => option<CssPaddingBottom.t>) => [> CssDeclarationFnConstructor.paddingBottom<'data> ];
let paddingLeftFn: ('data => option<CssPaddingLeft.t>) => [> CssDeclarationFnConstructor.paddingLeft<'data> ];
let clearFn: ('data => option<CssClear.t>) => [> CssDeclarationFnConstructor.clear<'data> ];
let colorFn: ('data => option<CssColor.t>) => [> CssDeclarationFnConstructor.color<'data> ];
let cursorFn: ('data => option<CssCursor.t>) => [> CssDeclarationFnConstructor.cursor<'data> ];
let fontWeightFn: ('data => option<CssFontWeight.t>) => [> CssDeclarationFnConstructor.fontWeight<'data> ];
let fontFamilyFn: ('data => option<CssFontFamily.t>) => [> CssDeclarationFnConstructor.fontFamily<'data> ];