// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Js_dict = require("rescript/lib/js/js_dict.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var CssRule$Ress = require("../rule/CssRule.js");
var CssAtRule$Ress = require("../at_rule/CssAtRule.js");
var CssDeclaration$Ress = require("../declaration/CssDeclaration.js");
var CssPseudoClass$Ress = require("../rule/CssPseudoClass.js");
var CssDeclarationFn$Ress = require("../declaration/CssDeclarationFn.js");

function Make(Type) {
  var make = CssDeclaration$Ress.make;
  var Declaration = {
    make: make
  };
  var DeclarationFn = CssDeclarationFn$Ress.Make({});
  var map = function (v) {
    return [
            "&" + v[0],
            v[1]
          ];
  };
  var PseudoClass = CssPseudoClass$Ress.Make({
        map: map
      });
  var Rule = CssRule$Ress.Make({});
  var make$1 = CssAtRule$Ress.make;
  var AtRule = {
    make: make$1
  };
  var make$2 = function (declaration) {
    var variant = declaration.NAME;
    if (variant === "AtRule") {
      return CssAtRule$Ress.make(declaration);
    } else if (variant === "PseudoClass") {
      return Curry._1(PseudoClass.make, declaration);
    } else if (variant === "DeclarationFn") {
      return Curry._1(DeclarationFn.make, declaration);
    } else if (variant === "Rule") {
      return Curry._1(Rule.make, declaration);
    } else {
      return CssDeclaration$Ress.make(declaration);
    }
  };
  var AdvancedDeclaration = {
    make: make$2
  };
  var make$3 = function (declarations) {
    return Js_dict.fromArray(Belt_Array.map(declarations, make$2));
  };
  return {
          Declaration: Declaration,
          DeclarationFn: DeclarationFn,
          PseudoClass: PseudoClass,
          Rule: Rule,
          AtRule: AtRule,
          AdvancedDeclaration: AdvancedDeclaration,
          make: make$3
        };
}

exports.Make = Make;
/* No side effect */
